name: jib - Deploy Azure with Gitops-Kustomize

on:      
  workflow_dispatch:
    inputs:
      name:
        description: "Docker TAG"
        required: true
        default: "master"

env:
  GIT_OPS_NAME: joohanops
  OPS_DIR: 
  # WHATAP_HOST: 10.241.10.36/10.241.10.37
  
jobs:
  ecr-build-push-and-deploy:
    name: azr-build-push-and-deploy
    runs-on: ubuntu-latest
    environment: production

    steps:
      
      - name: Check out the repo
        uses: actions/checkout@v4
      
      - name: Set Timezone
        uses: zcong1993/setup-timezone@master
        with:
          # Desired timezone for Linux
          timezoneLinux: Asia/Seoul
          
      - name: Set env  # TAG 를 현재 시간으로 설정
        run: echo "NOW=$(date -d '9 hours' +'%Y%m%d%H%M%S')" >> $GITHUB_ENV
      
      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@98669ae865ea3cffbcbaa878cf57c20bbf1c6c38
        with:
          images: ${{ github.repository }}
          tags: ${{ env.NOW }} # ${{ github.event.inputs.name }}

      - name: Log in to Azure Container Registry
        uses: azure/docker-login@v1
        with:
          login-server: ${{ secrets.AZURE_URL }}
          username: ${{ secrets.ACR_USERNAME }}
          password: ${{ secrets.ACR_PASSWORD }}

      - name: Set up JDK
        uses: actions/setup-java@v2
        with:
          java-version: '17'

      - name: Build and push with Jib
        run: mvn compile jib:build \
          -Dimage=${{ secrets.AZURE_URL }}/${{ steps.meta.outputs.tags }} \
          -Dusername=${{ secrets.ACR_USERNAME }} \
          -Dpassword=${{ secrets.ACR_PASSWORD }}
          
      - name: Build and Push to ACR
        uses: docker/build-push-action@v2
        with:
          context: .
          push: true
          file: ./Dockerfile
          platforms: linux/amd64
          build-args: |
            WHATAP_HOST: ${{ secrets.WHATAP_HOST }}
          tags: ${{ secrets.AZURE_URL }}/${{ steps.meta.outputs.tags }}

      # - name: Run Trivy vulnerability scanner
      #   uses: aquasecurity/trivy-action@master
      #   with:
      #     image-ref: "${{ secrets.AZURE_URL }}/${{ steps.meta.outputs.tags }}"
      #     format: "table"
      #     exit-code: "0"
      #     ignore-unfixed: true
      #     vuln-type: "os,library"
      #     severity: "CRITICAL,HIGH"
        
      # kustomize 명령을 가져온다.
      - name: Setup Kustomize
        uses: imranismail/setup-kustomize@v1

      - name: Checkout kustomize repository
        uses: actions/checkout@v2
        with:
          # kubernetes 설정정보 저장소
          repository: BG012401-Vivaldi/joohanops
          ref: main
          # 다른 저장소에 push 하려면 Personal Access Token이 필요.
          token: ${{ secrets.ACTION_TOKEN }} # ${{ secrets.GITHUB_TOKEN }} 
          path: ${{ env.GIT_OPS_NAME }}  # 수정: 정확한 경로 지정

      # 새 이미지 버전으로 파일 수정
      - name: Update Kubernetes resources
        run: |
          pwd
          cd ${{ env.GIT_OPS_NAME }}/${{ env.OPS_DIR }}
          REPO_NAME=$(echo ${{ github.repository }} | tr '[:upper:]' '[:lower:]')
          kustomize edit set image ${{ secrets.AZURE_URL }}/${REPO_NAME}:${{ env.NOW }}
          # kustomize edit set image ${{ secrets.AZURE_URL }}/${{ github.repository }}:${{ env.NOW }}
          cat kustomization.yaml
          
      # - name: Modify YAML file
      #   run: |
      #     # yq 설치 (yq가 설치되지 않은 경우)
      #     sudo snap install yq

      #     # YAML 파일 수정 (newTag의 값을 현재 시간으로 변경)
      #     yq e -i '.images[0].newTag = env(NOW)' kustomization.yaml  # 수정: env 사용법 변경
      #     # 주의: yq를 사용하여 새로운 태그로 업데이트하는 부분

      # 수정된 파일 commit & push
      - name: Commit manifest files
        run: |
          cd ${{ env.GIT_OPS_NAME }}/${{ env.OPS_DIR }}
          git checkout HEAD
          git config --global user.email "joohan.yoon@kt.com"
          git config --global user.name "joohan-yoon_ktdev"
          git commit -am 'update image tag ${{ env.NOW }} from GitHub Action'
          cat kustomization.yaml
          git push origin HEAD
